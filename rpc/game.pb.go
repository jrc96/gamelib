// Code generated by protoc-gen-go. DO NOT EDIT.
// source: game.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CodecType int32

const (
	CodecType_ProtoBuf CodecType = 0
	CodecType_Json     CodecType = 1
)

var CodecType_name = map[int32]string{
	0: "ProtoBuf",
	1: "Json",
}

var CodecType_value = map[string]int32{
	"ProtoBuf": 0,
	"Json":     1,
}

func (x CodecType) String() string {
	return proto.EnumName(CodecType_name, int32(x))
}

func (CodecType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{0}
}

type GameMsg struct {
	ServiceName          string   `protobuf:"bytes,1,opt,name=service_name,json=serviceName,proto3" json:"service_name,omitempty"`
	Msg                  []byte   `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	Session              *Session `protobuf:"bytes,3,opt,name=session,proto3" json:"session,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GameMsg) Reset()         { *m = GameMsg{} }
func (m *GameMsg) String() string { return proto.CompactTextString(m) }
func (*GameMsg) ProtoMessage()    {}
func (*GameMsg) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{0}
}

func (m *GameMsg) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GameMsg.Unmarshal(m, b)
}
func (m *GameMsg) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GameMsg.Marshal(b, m, deterministic)
}
func (m *GameMsg) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GameMsg.Merge(m, src)
}
func (m *GameMsg) XXX_Size() int {
	return xxx_messageInfo_GameMsg.Size(m)
}
func (m *GameMsg) XXX_DiscardUnknown() {
	xxx_messageInfo_GameMsg.DiscardUnknown(m)
}

var xxx_messageInfo_GameMsg proto.InternalMessageInfo

func (m *GameMsg) GetServiceName() string {
	if m != nil {
		return m.ServiceName
	}
	return ""
}

func (m *GameMsg) GetMsg() []byte {
	if m != nil {
		return m.Msg
	}
	return nil
}

func (m *GameMsg) GetSession() *Session {
	if m != nil {
		return m.Session
	}
	return nil
}

type Session struct {
	Codec                CodecType `protobuf:"varint,1,opt,name=codec,proto3,enum=rpc.CodecType" json:"codec,omitempty"`
	Uid                  uint64    `protobuf:"varint,2,opt,name=uid,proto3" json:"uid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_38fc58335341d769, []int{1}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetCodec() CodecType {
	if m != nil {
		return m.Codec
	}
	return CodecType_ProtoBuf
}

func (m *Session) GetUid() uint64 {
	if m != nil {
		return m.Uid
	}
	return 0
}

func init() {
	proto.RegisterEnum("rpc.CodecType", CodecType_name, CodecType_value)
	proto.RegisterType((*GameMsg)(nil), "rpc.GameMsg")
	proto.RegisterType((*Session)(nil), "rpc.Session")
}

func init() { proto.RegisterFile("game.proto", fileDescriptor_38fc58335341d769) }

var fileDescriptor_38fc58335341d769 = []byte{
	// 242 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x90, 0xc1, 0x4b, 0xc3, 0x30,
	0x18, 0xc5, 0x17, 0x5b, 0xd7, 0xed, 0x5b, 0x19, 0xe5, 0x3b, 0x15, 0x4f, 0xb5, 0x0e, 0x29, 0x3b,
	0x14, 0xa9, 0x7f, 0x81, 0xee, 0x20, 0x08, 0x8a, 0x64, 0x1e, 0xbc, 0x49, 0xcc, 0xbe, 0x95, 0xc2,
	0xd2, 0x84, 0x64, 0x13, 0xfc, 0xef, 0x25, 0x69, 0x15, 0xbc, 0x78, 0x7b, 0xf9, 0xbd, 0x17, 0x5e,
	0x5e, 0x00, 0x5a, 0xa1, 0xa8, 0x36, 0x56, 0x1f, 0x35, 0x46, 0xd6, 0xc8, 0x72, 0x0f, 0xc9, 0x83,
	0x50, 0xf4, 0xe4, 0x5a, 0xbc, 0x84, 0xd4, 0x91, 0xfd, 0xec, 0x24, 0xbd, 0xf7, 0x42, 0x51, 0xce,
	0x0a, 0x56, 0xcd, 0xf9, 0x62, 0x64, 0xcf, 0x42, 0x11, 0x66, 0x10, 0x29, 0xd7, 0xe6, 0x67, 0x05,
	0xab, 0x52, 0xee, 0x25, 0x5e, 0x43, 0xe2, 0xc8, 0xb9, 0x4e, 0xf7, 0x79, 0x54, 0xb0, 0x6a, 0xd1,
	0xa4, 0xb5, 0x35, 0xb2, 0xde, 0x0e, 0x8c, 0xff, 0x98, 0xe5, 0x1d, 0x24, 0x23, 0xc3, 0x15, 0x9c,
	0x4b, 0xbd, 0x23, 0x19, 0x0a, 0x96, 0xcd, 0x32, 0x5c, 0xd8, 0x78, 0xf2, 0xfa, 0x65, 0x88, 0x0f,
	0xa6, 0xaf, 0x3a, 0x75, 0xbb, 0x50, 0x15, 0x73, 0x2f, 0xd7, 0x57, 0x30, 0xff, 0x4d, 0x61, 0x0a,
	0xb3, 0x17, 0xbf, 0xe2, 0xfe, 0xb4, 0xcf, 0x26, 0x38, 0x83, 0xf8, 0xd1, 0xe9, 0x3e, 0x63, 0xcd,
	0x1b, 0xc4, 0x7e, 0x0f, 0xae, 0x61, 0xba, 0x3d, 0x5a, 0x12, 0x0a, 0x87, 0x07, 0x8d, 0x23, 0x2f,
	0xfe, 0x9c, 0xca, 0x49, 0xc5, 0x6e, 0x18, 0xae, 0x20, 0xde, 0x88, 0xc3, 0xe1, 0xff, 0xe4, 0xc7,
	0x34, 0xfc, 0xda, 0xed, 0x77, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc7, 0x9a, 0x0a, 0xb8, 0x43, 0x01,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// GameClient is the client API for Game service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GameClient interface {
	Stream(ctx context.Context, opts ...grpc.CallOption) (Game_StreamClient, error)
	Call(ctx context.Context, in *GameMsg, opts ...grpc.CallOption) (*GameMsg, error)
}

type gameClient struct {
	cc *grpc.ClientConn
}

func NewGameClient(cc *grpc.ClientConn) GameClient {
	return &gameClient{cc}
}

func (c *gameClient) Stream(ctx context.Context, opts ...grpc.CallOption) (Game_StreamClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Game_serviceDesc.Streams[0], "/rpc.Game/Stream", opts...)
	if err != nil {
		return nil, err
	}
	x := &gameStreamClient{stream}
	return x, nil
}

type Game_StreamClient interface {
	Send(*GameMsg) error
	Recv() (*GameMsg, error)
	grpc.ClientStream
}

type gameStreamClient struct {
	grpc.ClientStream
}

func (x *gameStreamClient) Send(m *GameMsg) error {
	return x.ClientStream.SendMsg(m)
}

func (x *gameStreamClient) Recv() (*GameMsg, error) {
	m := new(GameMsg)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *gameClient) Call(ctx context.Context, in *GameMsg, opts ...grpc.CallOption) (*GameMsg, error) {
	out := new(GameMsg)
	err := c.cc.Invoke(ctx, "/rpc.Game/Call", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GameServer is the server API for Game service.
type GameServer interface {
	Stream(Game_StreamServer) error
	Call(context.Context, *GameMsg) (*GameMsg, error)
}

// UnimplementedGameServer can be embedded to have forward compatible implementations.
type UnimplementedGameServer struct {
}

func (*UnimplementedGameServer) Stream(srv Game_StreamServer) error {
	return status.Errorf(codes.Unimplemented, "method Stream not implemented")
}
func (*UnimplementedGameServer) Call(ctx context.Context, req *GameMsg) (*GameMsg, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Call not implemented")
}

func RegisterGameServer(s *grpc.Server, srv GameServer) {
	s.RegisterService(&_Game_serviceDesc, srv)
}

func _Game_Stream_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(GameServer).Stream(&gameStreamServer{stream})
}

type Game_StreamServer interface {
	Send(*GameMsg) error
	Recv() (*GameMsg, error)
	grpc.ServerStream
}

type gameStreamServer struct {
	grpc.ServerStream
}

func (x *gameStreamServer) Send(m *GameMsg) error {
	return x.ServerStream.SendMsg(m)
}

func (x *gameStreamServer) Recv() (*GameMsg, error) {
	m := new(GameMsg)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func _Game_Call_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GameMsg)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GameServer).Call(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Game/Call",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GameServer).Call(ctx, req.(*GameMsg))
	}
	return interceptor(ctx, in, info, handler)
}

var _Game_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Game",
	HandlerType: (*GameServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Call",
			Handler:    _Game_Call_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Stream",
			Handler:       _Game_Stream_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "game.proto",
}
